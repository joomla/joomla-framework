<?php

use Joomla\Console\Console;
use Joomla\Console\Descriptor\Text\TextCommandDescriptor;
use Joomla\Console\Descriptor\Text\TextDescriptorHelper;
use Joomla\Console\Descriptor\Text\TextOptionDescriptor;
use Joomla\Console\Tests\Output\TestStdout;
use Joomla\Console\Tests\Stubs\FooCommand;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-09 at 15:11:48.
 */
class TextDescriptorHelperTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var TextDescriptorHelper
	 */
	protected $instance;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->instance = new TextDescriptorHelper(
			new TextCommandDescriptor,
			new TextOptionDescriptor
		);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 * @covers Joomla\Console\Descriptor\Text\TextDescriptorHelper::describe
	 * @todo   Implement testDescribe().
	 */
	public function testDescribe()
	{
		$compare = '<comment>Test Console</comment> - version: 1.2.3
------------------------------------------------------------

[<comment>foo</comment> Help]

foo desc

Usage:
  foo command option


Options:

  <info>-q / --quiet</info>
      q desc


Available commands:

  <info>aaa    </info>No description

  <info>bar    </info>Foo command desc

  <info>yoo    </info>Foo command desc

foo help';

		$console = new Console(null, null, new TestStdout);

		$console->setName('Test Console')
			->setVersion('1.2.3')
			->setDescription('test desc');

		$command = new FooCommand;

		$command->setApplication($console)
			->setDescription('foo desc')
			->setUsage('foo command option')
			->setHelp('foo help')
			->addArgument('bar')
			->addArgument('yoo')
			->addOption(array('q', 'quiet'), 'default', 'q desc');


		$result = $this->instance->describe($command);


		$this->assertEquals(
			str_replace(array("\r", "\n"), '', trim($compare)),
			str_replace(array("\r", "\n"), '', trim($result))
		);
	}
}
